services:
  quiz-service:
    build: 
      context: ./backend/quiz-service
      dockerfile: ../Dockerfile.microservice
      args:
        APP_BANNER: "Quiz Service DEV"
        APP_PORT: 5000
    volumes:
      - ./backend/quiz-service:/app
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - APP_PORT=5000
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret
  
  auth-service:
    build: 
      context: ./backend/auth-service
      dockerfile: ../Dockerfile.microservice
      args:
        APP_BANNER: "Auth Service DEV"
        APP_PORT: 5003
    volumes:
      - ./backend/auth-service:/app
    ports:
      - "5003:5003"
    env_file:
      - .env
    environment:
      - APP_PORT=5003
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5003/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  user-service:
    build: 
      context: ./backend/user-service
      dockerfile: ../Dockerfile.microservice
      args:
        APP_BANNER: "User Service DEV"
        APP_PORT: 5002
    volumes:
      - ./backend/user-service:/app
    ports:
      - "5002:5002"
    env_file:
      - .env
    environment:
      - APP_PORT=5002
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5002/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  stats-service:
    build: 
      context: ./backend/stats-service
      dockerfile: ../Dockerfile.microservice
      args:
        APP_BANNER: "Stats Service DEV"
        APP_PORT: 5001
    volumes:
      - ./backend/stats-service:/app
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - APP_PORT=5001
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    networks:
      - quiznet
    depends_on:
      proxy:
        condition: service_healthy

  proxy:
    build:
      context: ./backend/proxy
      dockerfile: ../Dockerfile.microservice
      args: 
        APP_BANNER: "Proxy Service DEV"
        APP_PORT: 3001
    volumes:
      - ./backend/proxy:/app
    ports:
      - "3001:3001"
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3001/"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 20s
      retries: 15
      start_period: 40s

secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  

networks:
  quiznet:


volumes:
  mongo_data:
