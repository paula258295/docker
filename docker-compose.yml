services:
  quiz-service:
    build: ./backend/quiz-service
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/authdb
    depends_on:
      - mongo
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret
  
  auth-service:
    build: ./backend/auth-service
    ports:
      - "5003:5003"
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:27017/authdb
    depends_on:
      - mongo
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  user-service:
    build: ./backend/user-service
    ports:
      - "5002:5002"
    environment:
      - MONGO_URI=mongodb://mongo:27017/authdb
    depends_on:
      - mongo
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  stats-service:
    build: ./backend/stats-service
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=mongodb://mongo:27017/authdb
    depends_on:
      - mongo
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - jwt_secret

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    networks:
      - quiznet
    depends_on:
      - quiz-service
      - auth-service
      - user-service
      - stats-service

  proxy:
    build: ./backend/proxy
    ports:
      - "3001:3001"
    networks:
      - quiznet
    depends_on:
      - quiz-service
      - auth-service
      - user-service
      - stats-service

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - quiznet
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  

networks:
  quiznet:


volumes:
  mongo_data:
